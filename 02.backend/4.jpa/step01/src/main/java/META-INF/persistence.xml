<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
	<persistence-unit name="step01"><!-- 프로젝트 이름 step01 -->
		<!-- persistence.xml : JPA와 관련된 몇 가지 설정 -->
		
		<!-- property name 목록 -->
		<!-- javax.persistence ~ : JPA 표준 속성 -->
		<!-- hibernate ~ : JPA의 구현체(구현 클래스) 중 하나인 hibernate의 전용 속성 -->
		
		<properties>
            <!-- property name -->
            <!-- javax.persistence ~ : JPA 표준 속성 -->
            <!-- hiberante ~ : JPA의 구현체 중 하나인 hibernate의 전용 속성 -->

            <!-- DB와 연결하기 위한 필수 속성 -->

            <!-- H2 Database 설정 -->
            <!-- <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value=""/>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/> -->
            <!-- DB Dialect(방언) 설정(H2 Database) -->
            <!-- <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" /> -->

            <!-- MySQL 설정 -->
            <property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver" />
			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/jpatest?serverTimezone=UTC"/>
			<property name="javax.persistence.jdbc.user" value="root"/>
			<property name="javax.persistence.jdbc.password" value="1234"/>
            <!-- DB Dialect(방언) 설정(MySQL) -->
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect" />
			<!-- 옵션(선택) 속성 -->
			<!-- hiberate의 실행 과정에서 콘솔에  테이블의 생성, DDL, DML 등 SQL문을 출력하도록 설정 -->
			<property name="hibernate.show_sql" value="true"/>
			<!-- SQL 출력 형태 정렬(formatting) -->
			<property name="hibernate.format_sql" value="true"/>
			
			<!-- **(중요) 애플리케이션 실행 시 DB 테이블을 자동으로 생성할 것인지? -->
			<!-- create: 기존의 테이블이 존재하면 삭제(drop), 테이블을 새로 생성, DROP TABLE + CREATE TABLE ~ -->
			<!-- update: DB테이블과 Entity(객체)의 맵핑(Mapping) 정보를 비교, 변경된 사항이 있으면 그 부분만 수정, 반영 -->
			<property name="hibernate.hbm2ddl.auto" value="create"/>
        </properties>
	</persistence-unit>
</persistence>
