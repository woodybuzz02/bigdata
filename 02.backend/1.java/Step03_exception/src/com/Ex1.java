package com;

public class Ex1 {

	public static void main(String[] args) {
		int number = 100;
		int result = 0;
		
		// number값을 랜덤값으로 나눈 결과 출력
		for (int i = 0; i<10; i++) {
			result = number /(int)(Math.random() * 10);
			System.out.println(result);
			
		}
		// 중간에 0으로 나누는 예외가 발생. 그래서 비정상적으로 종료됨.
		

	}
	/* compile error - 프로그램 코드 작성 중 실수로 발생하는 오류 , runtime error - 실행 중인 프로그램이 의도하지 않은 동작을 하거나 프로그램이 중지되는 실행오류
	 * 실행 오류 중 프로그램을 잘못 구현하여 의도한 바와 다르게 실행되어 생기는 오류를 버그(bug)라고 한다.
	 * 프로그램 실행 중 발생하는 오류는 예측하기 어려운 경우가 많고, 프로그램이 비정상 종료되면서 갑자기 멈춰 버린다.
	 * 실제 서비스 제공하고 있는 중 프로그램에서 오류가 생긴다면 서비스가 중지되므로 문제가 심각해진다.
	 * 이러한 경우를 줄이기 위해 다양한 예외에 대한 처리를 한다.
	 * 예외 처리를 하는 목적은 일단 프로그램이 비정상 종료되는 것을 방지하기 위한 것이다.
	 * 
	 * 실행 오류에는 자바 가상 머신에서 발생하는 시스템 오류(error)이고 다른 하나는 예외(exception)이다.
	 * 시스템 오류(error) - 사용가능한 동적 메모리가 없는 경우 혹은 스택 메모리의 오버플로가 발생한 경우 등 -> 이러한 오류는 프로그램에서 제어할 수 없다.
	 * 예외(exception) - 프로그램에서 파일을 읽어 사용하려고 하는데 파일이 없는 경우, 네트워크로 데이터를 전송하려는데 연결이 안 된 경우, 배열 값을 출력하려는데 배열 요소가 없는 경우 등 -> 프로그램에서 제어할 수 있다.
	 * 
	 * 오류 클래스는 모두 Throwable 클래스에서 상속받는다.
	 * 					Throwable
	 * 			____________|___________
	 * 			|						|
	 * 		  Error					Exception
	 * 
	 * IOException클래스 - 입출력에 대한 예외 처리
	 * RuntimeException클래스 - 프로그램 실행 중 발생할 수 있는 오류에 대한 예외 처리
	 */

}
